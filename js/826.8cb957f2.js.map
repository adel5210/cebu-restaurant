{"version":3,"file":"js/826.8cb957f2.js","mappings":"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","sources":["webpack://cebu-restaurant/./src/views/CebuRestaurantView.vue","webpack://cebu-restaurant/./node_modules/@supabase/functions-js/dist/module/helper.js","webpack://cebu-restaurant/./node_modules/@supabase/functions-js/dist/module/types.js","webpack://cebu-restaurant/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/version.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/constants.js","webpack://cebu-restaurant/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://cebu-restaurant/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://cebu-restaurant/./node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/lib/version.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://cebu-restaurant/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://cebu-restaurant/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://cebu-restaurant/./src/lib/supabaseClient.js","webpack://cebu-restaurant/./src/components/DirectionsRenderer.js","webpack://cebu-restaurant/src/views/CebuRestaurantView.vue","webpack://cebu-restaurant/./src/views/CebuRestaurantView.vue?f910","webpack://cebu-restaurant/./src/views/CebuRestaurantView.vue?93c1","webpack://cebu-restaurant/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://cebu-restaurant/./node_modules/es5-ext/global.js","webpack://cebu-restaurant/./node_modules/websocket/lib/browser.js","webpack://cebu-restaurant/./node_modules/websocket/lib/version.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}},[(_vm.cebuPosition)?_c('GmapMap',{ref:\"mapRef\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"id\":\"map\",\"center\":_vm.cebuPosition,\"zoom\":15,\"map-type-id\":\"terrain\"}},[_vm._l((_vm.restaurantPlots),function(plot,index){return _c('GmapMarker',{key:index,attrs:{\"position\":_vm.google && new _vm.google.maps.LatLng(plot.position[0], plot.position[1])}})}),(_vm.hasEnableUserMarker)?_c('GmapMarker',{attrs:{\"position\":_vm.google && new _vm.google.maps.LatLng(_vm.userPlots.lat, _vm.userPlots.lng)}}):_vm._e(),_c('DirectionsRenderer',{attrs:{\"travelMode\":\"DRIVING\",\"origin\":_vm.origin,\"destination\":_vm.destionation}})],2):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        super.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     */\n    invoke(functionName, invokeOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, body: functionArgs } = invokeOptions;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","import crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.allowEmpty = builder.allowEmpty;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.allowEmpty && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                count: null,\n                status: 0,\n                statusText: '',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=PostgrestBuilder.js.map","import PostgrestBuilder from './PostgrestBuilder';\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order foreign tables, but it doesn't affect the ordering of the\n     * current table.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.foreignTable - Set this to order a foreign table by foreign\n     * columns\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `from` and `to` inclusively.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        this.allowEmpty = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = this.headers['Accept'];\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param foreignTable - Set this to filter on foreign tables instead of the\n     * current table\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    insert(values, { count, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export const version = '1.4.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './PostgrestQueryBuilder';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nimport { DEFAULT_HEADERS } from './constants';\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head) {\n            method = 'HEAD';\n            Object.entries(args).forEach(([name, value]) => {\n                url.searchParams.append(name, `${value}`);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url,\n            headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","export const version = '2.6.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    /**\n     * listen to Postgres changes.\n     */\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    removeChannel(channel) {\n        return channel.unsubscribe().then((status) => {\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    removeAllChannels() {\n        return Promise.all(this.channels.map((channel) => channel.unsubscribe())).then((values) => {\n            this.disconnect();\n            return values;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            if (eventsPerSecondLimitMs > 0) {\n                this.inThrottle = true;\n                setTimeout(() => {\n                    this.inThrottle = false;\n                }, eventsPerSecondLimitMs);\n            }\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        return (yield import('cross-fetch')).Response;\n    }\n    return Response;\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error.json().then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError } from '../lib/errors';\nimport { get, post, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.3.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","export const version = '2.8.0';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return CrossFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","export function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    return {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n    };\n}\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.setItem(key, JSON.stringify(data));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = yield storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.removeItem(key);\n});\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time) {\n    return new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = yield fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        }))();\n    });\n    return promise;\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status) {\n        super(message, status);\n        this.name = 'AuthApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status) {\n        super(message);\n        this.name = name;\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status);\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const NETWORK_ERROR_CODES = [502, 503, 504];\n    if (!looksLikeFetchResponse(error)) {\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n    }\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n    }\n    else {\n        // got a response from server that is not in the 500...599 range - should not retry\n        error\n            .json()\n            .then((err) => {\n            reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((e) => {\n            // not a valid json response\n            reject(new AuthUnknownError(_getErrorMessage(e), e));\n        });\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\n            headers['Authorization'] = `Bearer ${options.jwt}`;\n        }\n        const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            qs['redirect_to'] = options.redirectTo;\n        }\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n    });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        session.expires_at = expiresAt(data.expires_in);\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id, shouldSoftDelete = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    body: {\n                        should_soft_delete: shouldSoftDelete,\n                    },\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","// Generated by genversion.\nexport const version = '2.12.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\n//# sourceMappingURL=constants.js.map","import { supportsLocalStorage } from './helpers';\nconst localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\nexport default localStorageAdapter;\n//# sourceMappingURL=local-storage.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthInvalidCredentialsError, AuthRetryableFetchError, AuthSessionMissingError, AuthUnknownError, isAuthApiError, isAuthError, } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, getParameterByName, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 10 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || localStorageAdapter;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            this.broadcastChannel.addEventListener('message', (event) => {\n                this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                if (this.detectSessionInUrl && this._isImplicitGrantFlow()) {\n                    const { data, error } = yield this._getSessionFromUrl();\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                    if (redirectType === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { error };\n                }\n                return {\n                    error: new AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                yield this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distingish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    signInWithPassword(credentials) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n            });\n        });\n    }\n    /**\n     * Allows signing in with an ID token issued by certain supported providers.\n     * The ID token is verified for validity and a new session is established.\n     *\n     * @experimental\n     */\n    signInWithIdToken(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            try {\n                const { options, provider, token, nonce } = credentials;\n                const res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                    headers: this.headers,\n                    body: {\n                        provider,\n                        id_token: token,\n                        nonce,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: _sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     *\n     * This API is experimental and availability is conditional on correct\n     * settings on the Auth service.\n     *\n     * @experimental\n     */\n    signInWithSSO(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                return yield _request(this.fetch, 'POST', `${this.url}/sso`, {\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                        : null)), { skip_http_redirect: true }),\n                    headers: this.headers,\n                    xform: _ssoResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield getItemAsync(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    updateUser(attributes, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession.access_token || !currentSession.refresh_token) {\n                    throw new AuthSessionMissingError();\n                }\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                const payload = decodeJWTPayload(currentSession.access_token);\n                if (payload.exp) {\n                    expiresAt = payload.exp;\n                    hasExpired = expiresAt <= timeNow;\n                }\n                if (hasExpired) {\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { user: null, session: null }, error: error };\n                    }\n                    if (!refreshedSession) {\n                        return { data: { user: null, session: null }, error: null };\n                    }\n                    session = refreshedSession;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new AuthImplicitGrantRedirectError('No browser detected.');\n                if (!this._isImplicitGrantFlow()) {\n                    throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                const error_description = getParameterByName('error_description');\n                if (error_description) {\n                    const error_code = getParameterByName('error_code');\n                    if (!error_code)\n                        throw new AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = getParameterByName('error');\n                    if (!error)\n                        throw new AuthImplicitGrantRedirectError('No error detected.');\n                    throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = getParameterByName('provider_token');\n                const provider_refresh_token = getParameterByName('provider_refresh_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = getParameterByName('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return (isBrowser() &&\n            (Boolean(getParameterByName('access_token')) ||\n                Boolean(getParameterByName('error_description'))));\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n                        return { error };\n                    }\n                }\n            }\n            yield this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        return { data: { subscription } };\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: { email, gotrue_meta_security: { captcha_token: options.captchaToken } },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startedAt = Date.now();\n                // will attempt to refresh the token with exponential backoff\n                return yield retryable((attempt) => __awaiter(this, void 0, void 0, function* () {\n                    yield sleep(attempt * 200); // 0, 200, 400, 800, ...\n                    return yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                        body: { refresh_token: refreshToken },\n                        headers: this.headers,\n                        xform: _sessionResponse,\n                    });\n                }), (attempt, _, result) => result &&\n                    result.error &&\n                    result.error instanceof AuthRetryableFetchError &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this._getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        // try to open on the browser\n        if (isBrowser() && !options.skipBrowserRedirect) {\n            window.location.assign(url);\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield getItemAsync(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new Deferred();\n                if (!refreshToken) {\n                    throw new AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session, broadcast = true) {\n        if (this.broadcastChannel && broadcast) {\n            this.broadcastChannel.postMessage({ event, session });\n        }\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield removeItemAsync(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n        });\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    _startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._stopAutoRefresh();\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n            this.autoRefreshTicker = ticker;\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n            }\n            // run the tick immediately\n            yield this._autoRefreshTokenTick();\n        });\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    _stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ticker = this.autoRefreshTicker;\n            this.autoRefreshTicker = null;\n            if (ticker) {\n                clearInterval(ticker);\n            }\n        });\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desireable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._startAutoRefresh();\n        });\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._stopAutoRefresh();\n        });\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    _autoRefreshTokenTick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            try {\n                const { data: { session }, } = yield this.getSession();\n                if (!session || !session.refresh_token || !session.expires_at) {\n                    return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n                    yield this._callRefreshToken(session.refresh_token);\n                }\n            }\n            catch (e) {\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n        });\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    _handleVisibilityChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                if (this.autoRefreshToken) {\n                    // in non-browser environments the refresh token ticker runs always\n                    this.startAutoRefresh();\n                }\n                return false;\n            }\n            try {\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n                // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n                yield this._onVisibilityChanged(true); // initial call\n            }\n            catch (error) {\n                console.error('_handleVisibilityChange', error);\n            }\n        });\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    _onVisibilityChanged(isInitial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                if (!isInitial) {\n                    // initial visibility change setup is handled in another flow under #initialize()\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n                if (this.autoRefreshToken) {\n                    // in browser environments the refresh token ticker runs only on focused tabs\n                    // which prevents race conditions\n                    this._startAutoRefresh();\n                }\n            }\n            else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                }\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body: {\n                        friendly_name: params.friendlyName,\n                        factor_type: params.factorType,\n                        issuer: params.issuer,\n                    },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                    body: { code: params.code, challenge_id: params.challengeId },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param args  The parameters to pass to the function call.\n     * @param options.head   When set to true, no data will be returned.\n     * @param options.count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import {createClient} from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.VUE_APP_SUPABASE_URL\nconst supabaseAnonKey = process.env.VUE_APP_SUPABASE_ANON_KEY\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n","import {MapElementFactory} from \"vue2-google-maps\";\n\nexport default MapElementFactory({\n    name: \"directionsRenderer\",\n\n    ctr() {\n        return window.google.maps.DirectionsRenderer;\n    },\n\n    events: [],\n\n    mappedProps: {},\n\n    props: {\n        origin: {type: Object},\n        destination: {type: Object},\n        travelMode: {type: String}\n    },\n\n    afterCreate(directionsRenderer) {\n        let directionsService = new window.google.maps.DirectionsService();\n\n        this.$watch(\n            () => [this.origin, this.destination, this.travelMode],\n            () => {\n                let {origin, destination, travelMode} = this;\n                if (!origin || !destination || !travelMode) return;\n\n                directionsService.route(\n                    {\n                        origin,\n                        destination,\n                        travelMode\n                    },\n                    (response, status) => {\n                        if (status !== \"OK\") return;\n                        directionsRenderer.setDirections(response);\n                    }\n                );\n            }\n        );\n    }\n});\n","<template>\n  <section style=\"width: 100%; height: 100%\">\n    <GmapMap\n        id=\"map\"\n        ref=\"mapRef\"\n        v-if=\"cebuPosition\"\n        :center=\"cebuPosition\"\n        :zoom=\"15\"\n        map-type-id=\"terrain\"\n        style=\"width: 100%; height: 100%\"\n    >\n      <GmapMarker v-for=\"(plot, index) in restaurantPlots\"\n                  :key=\"index\"\n                  :position=\"google && new google.maps.LatLng(plot.position[0], plot.position[1])\"\n      />\n      <GmapMarker v-if=\"hasEnableUserMarker\"\n                  :position=\"google && new google.maps.LatLng(userPlots.lat, userPlots.lng)\"\n      />\n      <DirectionsRenderer\n          travelMode=\"DRIVING\"\n          :origin=\"origin\"\n          :destination=\"destionation\"/>\n    </GmapMap>\n  </section>\n</template>\n\n<script>\nimport {gmapApi} from 'vue2-google-maps'\nimport {supabase} from \"@/lib/supabaseClient\";\nimport DirectionsRenderer from \"@/components/DirectionsRenderer\";\n\nexport default {\n  name: \"CebuRestaurantView\",\n  components: {\n    DirectionsRenderer\n  },\n  data() {\n    return {\n      hasEnableUserMarker: false,\n\n      cebuPosition: {lat: 1, lng: 1},\n      restaurantPlots: [],\n      userPlots: {lat: 1, lng: 1},\n      nextPageTokenApi: null,\n      start: \"\",\n      end: \"\"\n    }\n  },\n  methods: {\n    retrieveNearbyRestaurants(map) {\n      this.retrieveNearbyRestaurantsGoogleApi(map, null);\n      console.log(this.restaurantPlots);\n    },\n    retrieveNearbyRestaurantsGoogleApi(map, temp_next_page_token) {\n      let request = {\n        type: ['restaurant'],\n        radius: 5500,\n        location: this.cebuPosition\n      };\n\n      if (null != temp_next_page_token) {\n        request.pagetoken = temp_next_page_token;\n      }\n\n      console.log(request);\n\n      let service = new this.google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status, next_page_token) => {\n        if (status === 'OK') {\n          console.log(results);\n          console.log(next_page_token);\n          // setTimeout(() => {\n          //   if (next_page_token.hasNextPage) {\n          //     temp_next_page_token = next_page_token;\n          //     console.log(next_page_token);\n          //     this.retrieveNearbyRestaurantsGoogleApi(map, temp_next_page_token);\n          //   }\n          // }, 3000);\n          for (let i = 0; i < results.length; i++) {\n            this.restaurantPlots.push({\n              position: [results[i].geometry.location.lat(), results[i].geometry.location.lng()]\n            });\n          }\n        }\n      });\n    },\n    async retrieveSpecialMeals() {\n      const {data} = await supabase.from('special_food')\n          .select()\n      console.log(data);\n    },\n    async retrieveDefaultConfig() {\n      const {data} = await supabase.from('default_config')\n          .select()\n          .eq('id', 1)\n      console.log(data);\n      this.cebuPosition = {\n        lat: data[0].lat,\n        lng: data[0].lng\n      }\n\n    },\n  },\n  computed: {\n    google: gmapApi,\n    origin() {\n      if (!this.start) return null;\n      return this.start;\n    },\n    destionation() {\n      if (!this.end) return null;\n      return this.end;\n    }\n  },\n  watch: {\n    nextPageTokenApi(newT) {\n      console.log(newT)\n    }\n  },\n  mounted() {\n    this.retrieveDefaultConfig().then(() => {\n      this.$refs.mapRef.$mapPromise.then((map) => {\n        this.retrieveNearbyRestaurants(map);\n      })\n      this.retrieveSpecialMeals();\n      this.start = this.google && new this.google.maps.LatLng(10.3161138351106, 123.886463462485);\n      // this.end = new this.google.maps.LatLng(plot.position[0], plot.position[1]);\n      this.end = this.google && new this.google.maps.LatLng(10.311496555600227, 123.894086544846);\n    });\n\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CebuRestaurantView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CebuRestaurantView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CebuRestaurantView.vue?vue&type=template&id=fdb861b4&scoped=true&\"\nimport script from \"./CebuRestaurantView.vue?vue&type=script&lang=js&\"\nexport * from \"./CebuRestaurantView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fdb861b4\",\n  null\n  \n)\n\nexport default component.exports","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["render","_vm","this","_c","_self","staticStyle","cebuPosition","ref","attrs","_l","restaurantPlots","plot","index","key","google","maps","LatLng","position","hasEnableUserMarker","userPlots","lat","lng","_e","origin","destionation","staticRenderFns","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","resolveFetch","customFetch","_fetch","fetch","args","FunctionsError","Error","constructor","message","name","context","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","url","headers","setAuth","token","Authorization","invoke","functionName","invokeOptions","_a","body","functionArgs","_headers","Object","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","response","method","assign","catch","fetchError","isRelayError","get","ok","data","responseType","split","trim","json","blob","formData","text","error","PostgrestBuilder","builder","shouldThrowOnError","schema","signal","allowEmpty","throwOnError","onfulfilled","onrejected","undefined","includes","res","toString","async","_b","count","status","statusText","parse","countHeader","match","contentRange","length","parseInt","Array","isArray","_d","details","postgrestResponse","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","map","c","test","join","searchParams","set","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","options","filter","Boolean","forMediatype","rollback","returns","PostgrestFilterBuilder","eq","append","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","values","cleanedValues","s","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","type","typePart","configPart","entries","forEach","not","operator","or","filters","PostgrestQueryBuilder","head","insert","prefersHeaders","push","unshift","reduce","acc","x","concat","keys","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","version","DEFAULT_HEADERS","PostgrestClient","relation","URL","rpc","fn","VSN","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","REALTIME_PRESENCE_LISTEN_EVENTS","PostgresTypes","Timer","callback","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","setTimeout","Serializer","HEADER_LENGTH","decode","rawPayload","_binaryDecode","buffer","view","DataView","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","slice","event","byteLength","payload","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","send","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_cancelTimeout","_matchReceive","_on","trigger","_trigger","destroy","_off","h","RealtimePresence","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","indexOf","joinedPresenceRefs","curPresences","presenceRefsToRemove","obj","func","getOwnPropertyNames","metas","presence","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","isNaN","console","log","lastIdx","closeBrace","openBrace","arr","valTrim","_","val","replace","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","self","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","r","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","i","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","presenceState","track","untrack","on","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bind","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","open","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","Math","floor","encode","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","onerror","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","all","kind","msg","connectionState","readyState","connecting","Connecting","Open","closing","Closing","Closed","chan","isThrottled","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","URLSearchParams","StorageError","__isStorageError","isStorageError","StorageApiError","toJSON","StorageUnknownError","originalError","resolveResponse","Response","_getErrorMessage","err","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","put","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","String","cleanPath","_removeEmptyFolders","_path","_getFinalPath","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","Key","createSignedUrl","expiresIn","transform","downloadQueryParam","download","signedUrl","encodeURI","signedURL","createSignedUrls","paths","datum","wantsTransformation","renderPath","transformationQuery","transformOptsToQueryString","queryString","getPublicUrl","_queryString","publicUrl","prefixes","list","width","height","resize","quality","StorageBucketApi","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","StorageClient","resolveHeadersConstructor","Headers","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","input","init","has","stripTrailingSlash","applySettingDefaults","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","global","globalOptions","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","DEFAULT_GLOBAL_OPTIONS","expiresAt","timeNow","round","Date","now","random","v","document","localStorageWriteTests","tested","writable","supportsLocalStorage","globalThis","localStorage","randomKey","setItem","removeItem","getParameterByName","window","location","href","regex","results","exec","decodeURIComponent","looksLikeFetchResponse","maybeResponse","setItemAsync","storage","getItemAsync","getItem","removeItemAsync","decodeBase64URL","chr1","chr2","chr3","enc1","enc2","enc3","enc4","base64","fromCharCode","Deferred","promise","promiseConstructor","rej","decodeJWTPayload","base64UrlRegex","parts","base64Url","sleep","accept","retryable","isRetryable","attempt","Infinity","AuthError","__isAuthError","isAuthError","AuthApiError","isAuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthRetryableFetchError","__rest","t","p","getOwnPropertySymbols","propertyIsEnumerable","NETWORK_ERROR_CODES","_request","jwt","qs","redirectTo","xform","_sessionResponse","session","hasSession","expires_at","expires_in","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","refresh_token","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","_g","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","GOTRUE_URL","STORAGE_KEY","EXPIRY_MARGIN","localStorageAdapter","polyfillGlobalThis","defineProperty","configurable","__magic__","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","AUTO_REFRESH_TICK_DURATION","AUTO_REFRESH_TICK_THRESHOLD","GoTrueClient","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","admin","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","addEventListener","_notifyAllSubscribers","initialize","_initialize","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signUp","credentials","password","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","signInWithIdToken","nonce","id_token","signInWithOtp","create_user","shouldCreateUser","verifyOtp","signInWithSSO","provider_id","providerId","domain","skip_http_redirect","getSession","currentSession","maybeSession","_isValidSession","hasExpired","_callRefreshToken","getUser","updateUser","sessionData","sessionError","userError","_decodeJWT","setSession","exp","refreshedSession","token_type","refreshSession","error_code","provider_token","provider_refresh_token","hash","onAuthStateChange","subscription","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","isValidSession","_getUrlForProvider","postMessage","_persistSession","_removeVisibilityChangedCallback","removeEventListener","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","startAutoRefresh","stopAutoRefresh","expiresInTicks","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","verifiedFactors","amr","SupabaseAuthClient","SupabaseClient","supabaseUrl","_h","_supabaseUrl","realtimeUrl","authUrl","storageUrl","isPlatform","urlParts","functionsUrl","defaultStorageKey","hostname","DEFAULTS","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","functions","authHeaders","apikey","_handleTokenChanged","source","changedAccessToken","createClient","process","supabaseAnonKey","supabase","MapElementFactory","ctr","DirectionsRenderer","mappedProps","props","destination","travelMode","afterCreate","directionsRenderer","directionsService","DirectionsService","$watch","route","setDirections","components","nextPageTokenApi","start","end","methods","retrieveNearbyRestaurants","retrieveNearbyRestaurantsGoogleApi","temp_next_page_token","request","radius","pagetoken","service","places","PlacesService","nearbySearch","next_page_token","geometry","computed","gmapApi","watch","newT","mounted","retrieveDefaultConfig","$refs","mapRef","$mapPromise","retrieveSpecialMeals","component","__self__","F","DOMException","exports","support","iterable","Symbol","arrayBuffer","isDataView","isPrototypeOf","viewClasses","isArrayBufferView","isView","normalizeName","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","shift","header","consumed","bodyUsed","fileReaderReady","reader","onload","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","bufferClone","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","_bodyFormData","_bodyArrayBuffer","oldValue","normalizeMethod","upcased","toUpperCase","Request","mode","referrer","form","bytes","parseHeaders","rawHeaders","preProcessedHeaders","line","bodyInit","clone","redirectStatuses","redirect","RangeError","stack","create","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","setRequestHeader","onreadystatechange","polyfill","ponyfill","ctx","module","naiveFallback","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance","prop"],"sourceRoot":""}